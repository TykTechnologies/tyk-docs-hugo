{"version":3,"sources":["fonts/Smoolthan/Smoolthan Bold.otf","helpers.mjs","components/Clouds.js","components/Tests.js","components/TestsLineChart.js","components/Legend.js","components/Table.js","components/TestsLineChartSet.js","components/TestsBarChart.js","components/PluginTable.js","components/TestsBarChartSet.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","getTests","vendor","KONG","APOLLO","getTestsLabels","machines","2","4","8","16","capitalize","word","toUpperCase","slice","clouds","P99","colors","ranges","theme","createTheme","palette","primary","main","StyledToggleButtonGroup","styled","ToggleButtonGroup","_ref","&","borderRadius",".MuiToggleButtonGroup-grouped","fontFamily","fontWeight","color","&:first-of-type","&:last-of-type","&.Mui-selected","backgroundColor","Clouds","_ref2","cloud","setCloud","react_default","a","createElement","ThemeProvider","value","onChange","orientation","exclusive","ToggleButton","Tests","tests","labels","test","setTest","Tests_StyledToggleButtonGroup","Object","entries","map","_ref3","_ref4","slicedToArray","key","CustomizedTick","payload","props","verticalAnchor","index","visibleTicksCount","tickFormatter","objectWithoutProperties","assign","className","fill","x","dy","style","includes","CustomShape","fillOpacity","TestsLineChart","data","testSet","width","height","display","alignItems","maxWidth","transform","concat","ResponsiveContainer","LineChart","margin","top","right","left","bottom","ReferenceArea","x1","x2","shape","TestsLineChart_CustomShape","Line","type","dataKey","stroke","strokeWidth","dot","activeDot","r","CartesianGrid","strokeDasharray","strokeFill","vertical","XAxis","axisLine","tickLine","domain","interval","ticks","tick","TestsLineChart_CustomizedTick","label","offset","position","YAxis","Legend","values","_ref$colors","c","flexWrap","justifyContent","i","padding","listStyle","MainStyledTableCell","TableCell","defineProperty","tableCellClasses","head","fontSize","body","StyledTableCell","StyledTableRow","TableRow","_ref5","&:nth-of-type(odd)","components_Table","_ref6","rps","p99","sort","b","weight","TableContainer","component","Paper","sx","Table","minWidth","aria-label","TableHead","_ref7","machine","align","name","_ref8","react","colSpan","TableBody","scope","toFixed","TestsLineChartSet","defaultTest","_useState","useState","_useState2","_useState3","_useState4","Container","marginBottom","flexDirection","e","target","undefined","indexOf","TestsBarChart","range","BarChart","Bar","radius","tickCount","PluginTable","PluginTable_MainStyledTableCell","keys","_rps$key","_p99$key","PluginTable_StyledTableRow","TESTS","toConsumableArray","getPerfTests","LABELS","push","TestsBarChartSet","cloud_index","forEach","_rps$key$machine","_p99$key$machine","tyk","getData","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","benchmarks","kong","apollo","React","Component","analyzer","document","getElementById","classList","ReactDOM","createRoot","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.192c422c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Smoolthan Bold.223e3185.otf\";","const getTests = vendor => KONG === vendor ? [ 'vanilla','auth','rate-limiting','auth-quota' ] : APOLLO === vendor ? [ 'stitch-0','stitch-1','stitch-2' ] : [ 'all','analytics' ]\nconst getTestsLabels = vendor => KONG === vendor ? [ 'Vanilla','Auth','Rate-Limiting','Auth & Quota' ] : APOLLO === vendor ? [ 'Query Depth 1','Query Depth 2','Query Depth 3' ] : [ '2 Cores','4 Cores','8 Cores', '16 Cores' ]\n\nconst getTest = name => {\n  // have to test auth-quota before auth\n  const tests = [\n    'auth-quota','vanilla','auth','rate-limiting',\n    ...getTests(APOLLO),\n    ...getTests()\n  ]\n\n  for (let i = 0; i < tests.length; ++i) {\n    if (name.includes(tests[i])) return tests[i]\n  }\n}\n\nconst machines = {\n  2: [ 't2.medium','e2-medium','Standard_B2s' ],\n  4: [ 'c5.xlarge','c2-standard-4','Standard_F4s_v2' ],\n  8: [ 'c5.2xlarge','c2-standard-8','Standard_F8s_v2' ],\n  16: [ 'c5.4xlarge','c2-standard-16','Standard_F16s_v2' ],\n}\n\nconst getMachineWeight = machine => {\n  if (machines[2].includes(machine)) {\n    return 2\n  } else if (machines[4].includes(machine)) {\n    return 4\n  } else if (machines[8].includes(machine)) {\n    return 8\n  } else if (machines[16].includes(machine)) {\n    return 16\n  }\n}\n\nconst capitalize = word => word[0].toUpperCase() + word.slice(1)\n\nconst clouds = ['aws', 'gcp', 'azure'],\n      tests = ['rps', 'p99']\n\nconst RPS = 'rps',\n      P99 = 'p99'\n\nconst KONG = 'kong',\n      APOLLO = 'apollo'\n\nconst LINE = 'line',\n      BAR = 'bar'\n\nconst colors = [ \"#00CDB0\", \"#505071\", \"#FF7787\", \"#DBA72C\", \"#A8A8CF\", \"#C5425C\" ]\n\nconst ranges = {\n  2: [ [0,15000], [0,150] ],\n  4: [ [0,25000], [0,15] ],\n  8: [ [0,50000], [0,10] ],\n  16: [ [0,100000], [0,3] ],\n}\n\nexport {\n  getTest,\n  getTests,\n  getTestsLabels,\n  machines,\n  getMachineWeight,\n  clouds,\n  tests,\n  RPS,\n  P99,\n  KONG,\n  APOLLO,\n  LINE,\n  BAR,\n  colors,\n  capitalize,\n  ranges,\n}\n","import React from 'react'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles'\n\nimport { colors } from '../helpers'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: colors[0],\n    }\n  },\n})\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '&': {\n    borderRadius: 10,\n    '.MuiToggleButtonGroup-grouped': {\n      fontFamily: \"'Open Sans', sans-serif\",\n      fontWeight: 'bold',\n      color: '#A8A8CF',\n      '&:first-of-type': {\n        borderRadius: '10px 10px 0 0',\n      },\n      '&:last-of-type': {\n        borderRadius: '0 0 10px 10px',\n      },\n      '&.Mui-selected': {\n        color: '#258C80',\n        backgroundColor: '#D7F8F3',\n      },\n    },\n  },\n}))\n\nexport default ({ cloud, setCloud }) => (\n  <ThemeProvider theme={theme}>\n    <StyledToggleButtonGroup\n      value={cloud}\n      onChange={setCloud}\n      color=\"primary\"\n      orientation=\"vertical\"\n      exclusive\n    >\n      <ToggleButton value=\"aws\">AWS</ToggleButton>\n      <ToggleButton value=\"gcp\">GCP</ToggleButton>\n      <ToggleButton value=\"azure\">Azure</ToggleButton>\n    </StyledToggleButtonGroup>\n  </ThemeProvider>\n)\n","import React from 'react'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles'\n\nimport { colors } from '../helpers'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: colors[2],\n    }\n  },\n})\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '&': {\n    borderRadius: 10,\n    '.MuiToggleButtonGroup-grouped': {\n      fontFamily: \"'Open Sans', sans-serif\",\n      fontWeight: 'bold',\n      color: '#A8A8CF',\n      '&:first-of-type': {\n        borderRadius: '10px 10px 0 0',\n      },\n      '&:last-of-type': {\n        borderRadius: '0 0 10px 10px',\n      },\n      '&.Mui-selected': {\n        color: '#C5425C',\n        backgroundColor: '#FFE7EA',\n      },\n    },\n  },\n}))\n\nexport default ({ tests, labels, test, setTest }) => (\n  <ThemeProvider theme={theme}>\n    <StyledToggleButtonGroup\n      value={test}\n      onChange={setTest}\n      color=\"primary\"\n      orientation=\"vertical\"\n      exclusive\n    >\n    {Object.entries(tests).map(([key, value]) => (\n      <ToggleButton key={key} value={value}>{labels[key]}</ToggleButton>\n    ))}\n    </StyledToggleButtonGroup>\n  </ThemeProvider>\n)\n","import React from 'react'\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  ReferenceArea,\n} from 'recharts';\n\nimport {\n  KONG,\n  P99,\n  colors,\n} from '../helpers'\n\nimport './TestLineChart.css'\n\nconst CustomizedTick = ({ payload, verticalAnchor, index, visibleTicksCount, tickFormatter, ...props }) => (\n  <text\n    { ...props}\n    className=\"recharts-text recharts-cartesian-axis-tick-value\"\n    fill=\"#505071\"\n  >\n    <tspan\n      x={props.x}\n      dy=\"0.71em\"\n      style={{\n        fontWeight: [ 2, 4, 8, 16 ].includes(payload.value) ? 'bolder' : 'lighter',\n        fontFamily: \"'Open Sans', sans-serif\",\n      }}\n    >\n      {payload.value}\n    </tspan>\n  </text>\n)\n\nconst CustomShape = props => (\n  <g>\n    <rect\n      { ...props }\n      fill='#A8A8CF'\n      fillOpacity={0.1}\n    />\n  </g>\n)\n\nexport default ({ test, data, cloud, testSet }) => (\n  <div style={{\n    width: '470px',\n    height: '400px',\n    display: 'flex',\n  }}>\n    <div\n      className=\"yAxis\"\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '20px',\n        height: '340px',\n      }}\n    >\n      <label\n        className=\"recharts-label\"\n        style={{ transform: 'rotate(-90deg)' }}\n      >\n        {`${test.toUpperCase()}${P99 === test ? '(ms)' : ''}`}\n      </label>\n    </div>\n    <ResponsiveContainer width={450} height=\"100%\">\n      <LineChart\n        data={data}\n        margin={{ top: 10, right: 10, left: 10, bottom: 30 }}\n      >\n        {Object.entries([ 2, 6, 10, 14 ]).map(([key, value]) => (\n        <ReferenceArea\n          key={key}\n          x1={value}\n          x2={value+2}\n          shape={<CustomShape />}\n        />\n        ))}\n        <Line\n          type=\"linear\"\n          dataKey=\"tyk\"\n          stroke={colors[0]}\n          strokeWidth=\"4\"\n          dot={{ strokeWidth: 2 }}\n          activeDot={{ r: 6 }}\n        />\n        <Line\n          type=\"linear\"\n          dataKey={testSet}\n          stroke={KONG === testSet ? colors[1] : colors[2]}\n          strokeWidth=\"4\"\n          dot={{ strokeWidth: 2 }}\n          activeDot={{ r: 6 }}\n        />\n        <CartesianGrid\n          strokeDasharray=\"5\"\n          strokeFill=\"red\"\n          vertical={false}\n        />\n        <XAxis\n          dataKey=\"weight\"\n          axisLine={{ strokeWidth: 2 }}\n          tickLine={{ strokeWidth: 2 }}\n          type=\"number\"\n          domain={[0, 18]}\n          interval=\"preserveStart\"\n          ticks={[ 2, 4, 6, 8, 10, 12, 14, 16 ]}\n          tick={<CustomizedTick />}\n          label={{ value: 'CPUs', offset: -20, position: 'insideBottom' }}\n        />\n        <YAxis\n          axisLine={false}\n          tickLine={false}\n          type=\"number\"\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  </div>\n)\n","import React from 'react'\n\nimport {\n  colors as c,\n  capitalize,\n} from '../helpers'\n\nexport default ({ values, colors = c }) => (\n  <ul style={{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  }}>\n  {values.map((value, i) => (\n    <li\n      key={i}\n      style={{\n        padding: '5px',\n        listStyle: 'none',\n        display: 'flex',\n        alignItems: 'center',\n      }} >\n      <div style={{\n        height: '15px',\n        width: '15px',\n        borderRadius: '15px',\n        backgroundColor: colors?.[i],\n        margin: '5px',\n      }}/>\n      <div style={{\n        fontFamily: \"'Open Sans', sans-serif\",\n        color: '#505071',\n      }}>\n        {capitalize(value)}\n      </div>\n    </li>\n  ))}\n  </ul>\n)\n","import React, { Fragment } from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { styled } from \"@mui/material/styles\";\n\nimport { capitalize } from '../helpers'\n\nconst DECIMAL_PLACES = 2\n\nconst MainStyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    fontFamily: 'Smoolthan',\n    fontWeight: 'bold',\n    fontSize: '16px',\n    backgroundColor: '#2CA597',\n    color: '#FFFFFF'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14\n  }\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    fontFamily: \"'Open Sans', sans-serif\",\n    fontWeight: 'bold',\n    backgroundColor: '#D7F8F3',\n    color: '#258C80',\n    padding: 4\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14\n  }\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: \"rgba(168, 168, 207, 0.1)\"\n  },\n}));\n\nexport default ({ rps, p99, test, cloud, testSet }) => {\n  rps = Object.values(rps[cloud][test]).sort((a, b) => a.weight > b.weight ? 1 : -1)\n  p99 = Object.values(p99[cloud][test]).sort((a, b) => a.weight > b.weight ? 1 : -1)\n\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{ borderRadius: '10px' }}\n    >\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <MainStyledTableCell></MainStyledTableCell>\n            {Object.values(rps).map(({ machine }) => (\n              <MainStyledTableCell\n                key={machine}\n                align=\"center\"\n              >\n                <strong>{machine}</strong>\n              </MainStyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        {[ { name: 'RPS', value: rps }, { name: 'P99', value: p99 } ].map(({ name, value }, i) => (\n        <Fragment key={i}>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\" colSpan={5}>{name}</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[ 'tyk', testSet ].map((test, i) => (\n            <StyledTableRow key={i}>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                sx={{\n                  fontFamily: \"'Open Sans', sans-serif\",\n                  fontWeight: 'bold',\n                  color: '#505071',\n                }}\n              >\n                {capitalize(test)}\n              </TableCell>\n              {value.map(props => (\n                <TableCell\n                  key={props.machine}\n                  align=\"center\"\n                  sx={{\n                    fontFamily: \"'Open Sans', sans-serif\",\n                    color: '#505071',\n                  }}\n                >\n                  {props[test].toFixed(DECIMAL_PLACES)}\n                </TableCell>\n              ))}\n            </StyledTableRow>\n            ))}\n          </TableBody>\n        </Fragment>\n        ))}\n      </Table>\n    </TableContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport Container from '@mui/material/Container';\n\nimport Clouds from './Clouds'\nimport Tests from './Tests'\nimport TestsLineChart from './TestsLineChart'\nimport Legend from './Legend'\nimport Table from './Table'\n\nimport {\n  getTests,\n  getTestsLabels,\n  clouds,\n  APOLLO,\n  RPS,\n  P99,\n  colors,\n} from '../helpers'\n\nexport default ({ defaultTest, testSet, rps, p99 }) => {\n  const [test, setTest] = useState(defaultTest),\n        [cloud, setCloud] = useState(clouds[0])\n\n  return (\n    <Container maxWidth=\"lg\">\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          fontFamily: \"'Open Sans', sans-serif\",\n          marginBottom: '20px',\n        }}\n      >\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          minWidth: '160px',\n        }}>\n          <Clouds\n            cloud={cloud}\n            setCloud={e => setCloud(e.target.value)}\n          />\n          <div style={{ height: '10px' }}/>\n          <Tests\n            test={test}\n            tests={getTests(testSet)}\n            labels={getTestsLabels(testSet)}\n            setTest={e => setTest(e.target.value)}\n          />\n        </div>\n        <div>\n          <Legend\n            values={[ 'Tyk', testSet ]}\n            colors={APOLLO === testSet ? [ colors[0], colors[2] ] : undefined}\n          />\n          <div className=\"line\" style={{ display: \"flex\" }}>\n            <TestsLineChart\n              test={RPS}\n              cloud={clouds.indexOf(cloud)}\n              data={Object.values(rps[cloud][test]).sort((a, b) => a.weight > b.weight ? 1 : -1)}\n              testSet={testSet}\n            />\n            <TestsLineChart\n              test={P99}\n              cloud={clouds.indexOf(cloud)}\n              data={Object.values(p99[cloud][test]).sort((a, b) => a.weight > b.weight ? 1 : -1)}\n              testSet={testSet}\n            />\n          </div>\n        </div>\n      </div>\n      <Table\n        rps={rps}\n        p99={p99}\n        test={test}\n        cloud={cloud}\n        testSet={testSet}\n      />\n    </Container>\n  )\n}\n","import React from 'react'\nimport {\n  BarChart,\n  Bar,\n  CartesianGrid,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nimport {\n  P99,\n  colors,\n} from '../helpers'\n\nimport './TestBarChart.css'\n\nexport default ({ test, tests, data, range, machine }) => (\n  <div style={{\n    width: '470px',\n    height: '400px',\n    display: 'flex',\n  }}>\n    <div\n      className=\"yAxis\"\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '20px',\n        height: '340px',\n      }}\n    >\n      <label\n        className=\"recharts-label\"\n        style={{ transform: 'rotate(-90deg)' }}\n      >\n        {`${test.toUpperCase()}${P99 === test ? '(ms)' : ''}`}\n      </label>\n    </div>\n    <ResponsiveContainer width={450} height=\"100%\">\n      <BarChart\n        data={data}\n        margin={{ top: 10, right: 10, left: 10, bottom: 30 }}\n      >\n        {Object.values(tests).map((value, key) => (\n        <Bar\n          key={key}\n          dataKey={value}\n          fill={colors[key]}\n          radius={[10, 10, 0, 0]}\n        />\n        ))}\n        <CartesianGrid\n          strokeDasharray=\"5\"\n          vertical={false}\n        />\n        <XAxis\n          tickLine={false}\n          axisLine={{ strokeWidth: 2 }}\n          tick={false}\n          domain={[0]}\n          label={{ value: machine, position: 'insideBottom' }}\n        />\n        <YAxis\n          axisLine={false}\n          tickLine={false}\n          domain={range}\n          tickCount={6}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  </div>\n)\n","import React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { styled } from '@mui/material/styles'\n\nimport { capitalize } from '../helpers'\n\nconst DECIMAL_PLACES = 2\n\nconst MainStyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    fontFamily: 'Smoolthan',\n    fontWeight: 'bold',\n    backgroundColor: '#2CA597',\n    color: '#FFFFFF'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  }\n}))\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: \"rgba(168, 168, 207, 0.1)\"\n  },\n}));\n\nexport default ({ rps, p99, labels }) => (\n  <TableContainer\n    component={Paper}\n    sx={{ borderRadius: '10px' }}\n  >\n    <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n      <TableHead>\n        <TableRow>\n          <MainStyledTableCell align=\"center\"></MainStyledTableCell>\n          <MainStyledTableCell align=\"center\">RPS</MainStyledTableCell>\n          <MainStyledTableCell align=\"center\">P99 (ms)</MainStyledTableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.keys(rps).map((key, i) => (\n        <StyledTableRow key={key} >\n          <TableCell\n            component=\"th\"\n            scope=\"row\"\n            sx={{\n              fontFamily: \"'Open Sans', sans-serif\",\n              fontWeight: 'bold',\n              color: '#505071',\n            }}\n          >\n            {capitalize(labels[i])}\n          </TableCell>\n          <TableCell\n            component=\"th\"\n            scope=\"row\"\n            align=\"center\"\n            sx={{\n              fontFamily: \"'Open Sans', sans-serif\",\n              color: '#505071',\n            }}\n          >\n            {rps[key]?.toFixed(DECIMAL_PLACES)}\n          </TableCell>\n          <TableCell\n            component=\"th\"\n            scope=\"row\"\n            align=\"center\"\n            sx={{\n              fontFamily: \"'Open Sans', sans-serif\",\n              color: '#505071',\n            }}\n          >\n            {p99[key]?.toFixed(DECIMAL_PLACES)}\n          </TableCell>\n        </StyledTableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n)\n","import React, { useState } from 'react'\nimport Container from '@mui/material/Container';\n\nimport Clouds from './Clouds'\nimport Tests from './Tests'\nimport TestsBarChart from './TestsBarChart'\nimport Legend from './Legend'\nimport PluginTable from './PluginTable'\n\nimport {\n  clouds,\n  RPS,\n  P99,\n  KONG,\n  getTests as getPerfTests,\n  getTestsLabels,\n  machines,\n  getMachineWeight,\n  ranges,\n} from '../helpers'\n\nconst TESTS = [ ...getPerfTests(KONG), ...getPerfTests() ],\n      LABELS = [ ...getTestsLabels(KONG), ...getPerfTests() ]\n\nconst getTests = cloud => {\n  const tests = []\n\n  Object.values(machines).map(value => tests.push(value[clouds.indexOf(cloud)]))\n\n  return tests\n}\n\nconst getData = (rps, p99, machine) => {\n  const data = {}\n\n  data[RPS] = {}\n  data[P99] = {}\n\n\n  Object.keys(rps).forEach(key => {\n    if (TESTS.includes(key)) {\n      data[RPS][key] = rps[key][machine]?.tyk\n      data[P99][key] = p99[key][machine]?.tyk\n    }\n  })\n\n  return data\n}\n\nexport default ({ defaultTest, rps, p99 }) => {\n  const [test, setTest] = useState(defaultTest),\n        [cloud, setCloud] = useState(clouds[0]),\n        cloud_index=clouds.indexOf(cloud),\n        machine = machines[test][clouds.indexOf(cloud)],\n        data = getData(rps[cloud], p99[cloud], machine)\n\n  return (\n    <Container maxWidth=\"lg\">\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          fontFamily: \"'Open Sans', sans-serif\",\n          marginBottom: '20px',\n        }}\n      >\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          minWidth: '160px',\n        }}>\n          <Clouds\n            cloud={cloud}\n            setCloud={e => setCloud(e.target.value)}\n          />\n          <div style={{ height: '10px' }}/>\n          <Tests\n            test={machines[test][cloud_index]}\n            tests={getTests(cloud)}\n            labels={getTestsLabels()}\n            setTest={e => setTest(getMachineWeight(e.target.value))}\n          />\n        </div>\n        <div>\n          <Legend values={LABELS} />\n          <div className=\"bar\" style={{ display: \"flex\" }}>\n            <TestsBarChart\n              test={RPS}\n              tests={TESTS}\n              data={[ data.rps ]}\n              range={ranges[test][0]}\n              machine={machine}\n            />\n            <TestsBarChart\n              test={P99}\n              tests={TESTS}\n              data={[ data.p99 ]}\n              range={ranges[test][1]}\n              machine={machine}\n            />\n          </div>\n        </div>\n      </div>\n      <PluginTable\n        labels={LABELS}\n        { ...data }\n      />\n    </Container>\n  )\n}\n","import React from 'react'\n\nimport TestsLineChartSet from './components/TestsLineChartSet'\nimport TestsBarChartSet from './components/TestsBarChartSet'\n\nimport {\n  KONG,\n  APOLLO,\n} from './helpers'\n\nimport benchmarks from './benchmarks'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cloud: 'aws',\n      test: 'auth',\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      {this.props.tyk ? <TestsBarChartSet\n        defaultTest={16}\n        { ...benchmarks }\n      /> : null}\n      {this.props.kong ? <TestsLineChartSet\n        testSet={KONG}\n        defaultTest={'auth'}\n        { ...benchmarks }\n      /> : null}\n      {this.props.apollo ? <TestsLineChartSet\n        testSet={APOLLO}\n        defaultTest={'stitch-0'}\n        { ...benchmarks }\n      /> : null}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\n\nimport './fonts/Smoolthan/Smoolthan Bold.otf'\nimport './index.css'\n\nconst analyzer = document.getElementById('analyzer'),\n      className = analyzer.classList.value\n\nReactDOM.createRoot(analyzer).render(\n  <React.StrictMode>\n    <App\n      tyk={className.includes('tyk')}\n      kong={className.includes('kong')}\n      apollo={className.includes('apollo')}\n    />\n  </React.StrictMode>\n)\n"],"sourceRoot":""}