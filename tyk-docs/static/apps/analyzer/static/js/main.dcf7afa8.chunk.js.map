{"version":3,"sources":["fonts/Smoolthan/Smoolthan Bold.otf","helpers.mjs","components/Clouds.js","components/Tests.js","components/TestsLineChart.js","components/Legend.js","components/Table.js","components/TestsLineChartSet.js","components/TestsBarChart.js","components/PluginTable.js","components/TestsBarChartSet.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","getTests","vendor","KONG","APOLLO","machines","2","4","8","16","capitalize","word","toUpperCase","slice","clouds","P99","colors","ranges","theme","createTheme","palette","primary","main","StyledToggleButtonGroup","styled","ToggleButtonGroup","_ref","&","borderRadius",".MuiToggleButtonGroup-grouped","fontFamily","fontWeight","color","&:first-child","&:last-child","&.Mui-selected","backgroundColor","Clouds","_ref2","cloud","setCloud","react_default","a","createElement","ThemeProvider","value","onChange","orientation","exclusive","ToggleButton","Tests","tests","test","setTest","Tests_StyledToggleButtonGroup","Object","entries","map","_ref3","_ref4","slicedToArray","key","CustomizedTick","payload","props","verticalAnchor","index","visibleTicksCount","tickFormatter","objectWithoutProperties","assign","className","x","dy","style","includes","CustomShape","fill","fillOpacity","TestsLineChart","data","testSet","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","ReferenceArea","x1","x2","shape","TestsLineChart_CustomShape","Line","type","dataKey","stroke","strokeWidth","dot","activeDot","r","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","domain","interval","ticks","tick","TestsLineChart_CustomizedTick","label","offset","position","YAxis","concat","angle","Legend","values","_ref$colors","c","display","flexWrap","justifyContent","i","padding","listStyle","alignItems","split","v","join","MainStyledTableCell","TableCell","defineProperty","tableCellClasses","head","fontSize","body","StyledTableCell","StyledTableRow","TableRow","_ref5","&:nth-of-type(odd)","action","hover","components_Table","_ref6","rps","p99","sort","b","weight","TableContainer","component","Paper","sx","Table","minWidth","aria-label","TableHead","_ref7","machine","align","name","_ref8","Fragment","colSpan","TableBody","scope","toFixed","TestsLineChartSet","defaultTest","_useState","useState","_useState2","_useState3","_useState4","Container","maxWidth","marginBottom","flexDirection","e","target","undefined","indexOf","TestsBarChart","range","BarChart","Bar","radius","tickCount","PluginTable","PluginTable_MainStyledTableCell","keys","_rps$key","_p99$key","PluginTable_StyledTableRow","TESTS","toConsumableArray","getPerfTests","push","TestsBarChartSet","cloud_index","_rps$key$machine","_p99$key$machine","tyk","getData","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","benchmarks","kong","apollo","React","Component","analyzer","document","getElementById","classList","ReactDOM","createRoot","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.dcf7afa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Smoolthan Bold.223e3185.otf\";","const getTests = vendor => KONG === vendor ? [ 'vanilla','auth','rate-limiting','auth-quota' ] : APOLLO === vendor ? [ 'stitch-0','stitch-1','stitch-2' ] : [ 'all','analytics' ]\n\nconst getTest = name => {\n  // have to test auth-quota before auth\n  const tests = [\n    'auth-quota','vanilla','auth','rate-limiting',\n    ...getTests(APOLLO),\n    ...getTests()\n  ]\n\n  for (let i = 0; i < tests.length; ++i) {\n    if (name.includes(tests[i])) return tests[i]\n  }\n}\n\nconst machines = {\n  2: [ 't2.medium','e2-medium','Standard_B2s' ],\n  4: [ 'c5.xlarge','c2-standard-4','Standard_F4s_v2' ],\n  8: [ 'c5.2xlarge','c2-standard-8','Standard_F8s_v2' ],\n  16: [ 'c5.4xlarge','c2-standard-16','Standard_F16s_v2' ],\n}\n\nconst getMachineWeight = machine => {\n  if (machines[2].includes(machine)) {\n    return 2\n  } else if (machines[4].includes(machine)) {\n    return 4\n  } else if (machines[8].includes(machine)) {\n    return 8\n  } else if (machines[16].includes(machine)) {\n    return 16\n  }\n}\n\nconst capitalize = word => word[0].toUpperCase() + word.slice(1)\n\nconst clouds = ['aws', 'gcp', 'azure'],\n      tests = ['rps', 'p99']\n\nconst RPS = 'rps',\n      P99 = 'p99'\n\nconst KONG = 'kong',\n      APOLLO = 'apollo'\n\nconst LINE = 'line',\n      BAR = 'bar'\n\nconst colors = [ \"#00CDB0\", \"#505071\", \"#FF7787\", \"#DBA72C\", \"#A8A8CF\", \"#C5425C\" ]\n\nconst ranges = {\n  2: [ [0,15000], [0,150] ],\n  4: [ [0,25000], [0,15] ],\n  8: [ [0,50000], [0,10] ],\n  16: [ [0,100000], [0,3] ],\n}\n\nexport {\n  getTest,\n  getTests,\n  machines,\n  getMachineWeight,\n  clouds,\n  tests,\n  RPS,\n  P99,\n  KONG,\n  APOLLO,\n  LINE,\n  BAR,\n  colors,\n  capitalize,\n  ranges,\n}\n","import React from 'react'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles'\n\nimport { colors } from '../helpers'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: colors[0],\n    }\n  },\n})\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '&': {\n    borderRadius: 10,\n    '.MuiToggleButtonGroup-grouped': {\n      fontFamily: \"'Open Sans', sans-serif\",\n      fontWeight: 'bold',\n      color: '#A8A8CF',\n      '&:first-child': {\n        borderRadius: '10px 10px 0 0',\n      },\n      '&:last-child': {\n        borderRadius: '0 0 10px 10px',\n      },\n      '&.Mui-selected': {\n        color: '#258C80',\n        backgroundColor: '#D7F8F3',\n      },\n    },\n  },\n}))\n\nexport default ({ cloud, setCloud }) => (\n  <ThemeProvider theme={theme}>\n    <StyledToggleButtonGroup\n      value={cloud}\n      onChange={setCloud}\n      color=\"primary\"\n      orientation=\"vertical\"\n      exclusive\n    >\n      <ToggleButton value=\"aws\">AWS</ToggleButton>\n      <ToggleButton value=\"gcp\">GCP</ToggleButton>\n      <ToggleButton value=\"azure\">Azure</ToggleButton>\n    </StyledToggleButtonGroup>\n  </ThemeProvider>\n)\n","import React from 'react'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles'\n\nimport { colors } from '../helpers'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: colors[2],\n    }\n  },\n})\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '&': {\n    borderRadius: 10,\n    '.MuiToggleButtonGroup-grouped': {\n      fontFamily: \"'Open Sans', sans-serif\",\n      fontWeight: 'bold',\n      color: '#A8A8CF',\n      '&:first-child': {\n        borderRadius: '10px 10px 0 0',\n      },\n      '&:last-child': {\n        borderRadius: '0 0 10px 10px',\n      },\n      '&.Mui-selected': {\n        color: '#C5425C',\n        backgroundColor: '#FFE7EA',\n      },\n    },\n  },\n}))\n\nexport default ({ tests, test, setTest }) => (\n  <ThemeProvider theme={theme}>\n    <StyledToggleButtonGroup\n      value={test}\n      onChange={setTest}\n      color=\"primary\"\n      orientation=\"vertical\"\n      exclusive\n    >\n    {Object.entries(tests).map(([key, value]) => (\n      <ToggleButton key={key} value={value}>{value}</ToggleButton>\n    ))}\n    </StyledToggleButtonGroup>\n  </ThemeProvider>\n)\n","import React from 'react'\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  ReferenceArea,\n} from 'recharts';\n\nimport {\n  KONG,\n  P99,\n  colors,\n} from '../helpers'\n\nimport './TestLineChart.css'\n\nconst CustomizedTick = ({ payload, verticalAnchor, index, visibleTicksCount, tickFormatter, ...props }) => (\n  <text\n    { ...props}\n    className=\"recharts-text recharts-cartesian-axis-tick-value\"\n  >\n    <tspan\n      x={props.x}\n      dy=\"0.71em\"\n      style={{\n        fontWeight: [ 2, 4, 8, 16 ].includes(payload.value) ? 'bolder' : 'lighter'\n      }}\n    >\n      {payload.value}\n    </tspan>\n  </text>\n)\n\nconst CustomShape = props => (\n  <g>\n    <rect\n      { ...props }\n      fill='#A8A8CF'\n      fillOpacity={0.1}\n    />\n  </g>\n)\n\nexport default ({ test, data, cloud, testSet }) => (\n  <ResponsiveContainer width={500} height=\"100%\">\n    <LineChart\n      data={data}\n      margin={{ top: 40, right: 40, left: 40, bottom: 40 }}\n    >\n      {Object.entries([ 2, 6, 10, 14 ]).map(([key, value]) => (\n      <ReferenceArea\n        key={key}\n        x1={value}\n        x2={value+2}\n        shape={<CustomShape />}\n      />\n      ))}\n      <Line\n        type=\"linear\"\n        dataKey=\"tyk\"\n        stroke={colors[0]}\n        strokeWidth=\"4\"\n        dot={{ strokeWidth: 2 }}\n        activeDot={{ r: 6 }}\n      />\n      <Line\n        type=\"linear\"\n        dataKey={testSet}\n        stroke={KONG === testSet ? colors[1] : colors[2]}\n        strokeWidth=\"4\"\n        dot={{ strokeWidth: 2 }}\n        activeDot={{ r: 6 }}\n      />\n      <CartesianGrid\n        strokeDasharray=\"5\"\n        vertical={false}\n      />\n      <XAxis\n        dataKey=\"weight\"\n        axisLine={{ strokeWidth: 2 }}\n        tickLine={{ strokeWidth: 2 }}\n        type=\"number\"\n        domain={[0, 18]}\n        interval=\"preserveStart\"\n        ticks={[ 2, 4, 6, 8, 10, 12, 14, 16 ]}\n        tick={<CustomizedTick />}\n        label={{ value: 'CPUs', offset: -20, position: 'insideBottom' }}\n      />\n      <YAxis\n        axisLine={false}\n        tickLine={false}\n        type=\"number\"\n        label={{\n          value: `${test.toUpperCase()}${P99 === test ? '(ms)' : ''}`,\n          angle: -90,\n          offset: -20,\n          position: 'insideLeft'\n        }}\n      />\n    </LineChart>\n  </ResponsiveContainer>\n)\n","import React from 'react'\n\nimport {\n  colors as c,\n  capitalize,\n} from '../helpers'\n\nexport default ({ values, colors = c }) => (\n  <ul style={{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  }}>\n  {values.map((value, i) => (\n    <li\n      key={i}\n      style={{\n        padding: '5px',\n        listStyle: 'none',\n        display: 'flex',\n        alignItems: 'center',\n      }} >\n      <div style={{\n        height: '15px',\n        width: '15px',\n        borderRadius: '15px',\n        fontFamily: \"'Open Sans', sans-serif\",\n        color: '#505071',\n        backgroundColor: colors?.[i],\n        margin: '5px',\n      }}/>\n      <div>{value.split('-').map(v => capitalize(v)).join(' & ')}</div>\n    </li>\n  ))}\n  </ul>\n)\n","import React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { styled } from \"@mui/material/styles\";\n\nimport { capitalize } from '../helpers'\n\nconst DECIMAL_PLACES = 2\n\nconst MainStyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    fontFamily: 'Smoolthan',\n    fontWeight: 'bold',\n    fontSize: '16px',\n    backgroundColor: '#2CA597',\n    color: '#FFFFFF'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14\n  }\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    fontFamily: \"'Open Sans', sans-serif\",\n    fontWeight: 'bold',\n    backgroundColor: '#D7F8F3',\n    color: '#258C80',\n    padding: 4\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14\n  }\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover\n  },\n}));\n\nexport default ({ rps, p99, test, cloud, testSet }) => {\n  rps = Object.values(rps[cloud][test]).sort((a, b) => a.weight > b.weight ? 1 : -1)\n  p99 = Object.values(p99[cloud][test]).sort((a, b) => a.weight > b.weight ? 1 : -1)\n\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{ borderRadius: '10px' }}\n    >\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <MainStyledTableCell></MainStyledTableCell>\n            {Object.values(rps).map(({ machine }) => (\n              <MainStyledTableCell\n                key={machine}\n                align=\"center\"\n              >\n                <strong>{machine}</strong>\n              </MainStyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        {[ { name: 'RPS', value: rps }, { name: 'P99', value: p99 } ].map(({ name, value }) => (\n        <>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\" colSpan={5}>{name}</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[ 'tyk', testSet ].map(test => (\n            <StyledTableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                sx={{\n                  fontFamily: \"'Open Sans', sans-serif\",\n                  fontWeight: 'bold',\n                  color: '#505071',\n                }}\n              >\n                {capitalize(test)}\n              </TableCell>\n              {value.map(props => (\n                <TableCell\n                  key={props.machine}\n                  align=\"center\"\n                  sx={{\n                    fontFamily: \"'Open Sans', sans-serif\",\n                    color: '#505071',\n                  }}\n                >\n                  {props[test].toFixed(DECIMAL_PLACES)}\n                </TableCell>\n              ))}\n            </StyledTableRow>\n            ))}\n          </TableBody>\n        </>\n        ))}\n      </Table>\n    </TableContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport Container from '@mui/material/Container';\n\nimport Clouds from './Clouds'\nimport Tests from './Tests'\nimport TestsLineChart from './TestsLineChart'\nimport Legend from './Legend'\nimport Table from './Table'\n\nimport {\n  getTests,\n  clouds,\n  APOLLO,\n  RPS,\n  P99,\n  colors,\n} from '../helpers'\n\nexport default ({ defaultTest, testSet, rps, p99 }) => {\n  const [test, setTest] = useState(defaultTest),\n        [cloud, setCloud] = useState(clouds[0])\n\n  return (\n    <Container maxWidth=\"lg\">\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontFamily: \"'Open Sans', sans-serif\",\n          marginBottom: '20px',\n        }}\n      >\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          width: '200px',\n        }}>\n          <Clouds\n            cloud={cloud}\n            setCloud={e => setCloud(e.target.value)}\n          />\n          <div style={{ height: '10px' }}/>\n          <Tests\n            test={test}\n            tests={getTests(testSet)}\n            setTest={e => setTest(e.target.value)}\n          />\n        </div>\n        <div>\n          <Legend\n            values={[ 'Tyk', testSet ]}\n            colors={APOLLO === testSet ? [ colors[0], colors[2] ] : undefined}\n          />\n          <div style={{ display: \"flex\" }}>\n            <div style={{\n              width: '500px',\n              height: '400px'\n            }}>\n              <TestsLineChart\n                test={RPS}\n                cloud={clouds.indexOf(cloud)}\n                data={Object.values(rps[cloud][test]).sort((a, b) => a.weight > b.weight ? 1 : -1)}\n                testSet={testSet}\n              />\n            </div>\n            <div style={{\n              width: '500px',\n              height: '400px'\n            }}>\n              <TestsLineChart\n                test={P99}\n                cloud={clouds.indexOf(cloud)}\n                data={Object.values(p99[cloud][test]).sort((a, b) => a.weight > b.weight ? 1 : -1)}\n                testSet={testSet}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <Table\n        rps={rps}\n        p99={p99}\n        test={test}\n        cloud={cloud}\n        testSet={testSet}\n      />\n    </Container>\n  )\n}\n","import React from 'react'\nimport {\n  BarChart,\n  Bar,\n  CartesianGrid,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nimport {\n  P99,\n  colors,\n} from '../helpers'\n\nimport './TestBarChart.css'\n\nexport default ({ test, tests, data, range }) => (\n  <ResponsiveContainer width={500} height=\"100%\">\n    <BarChart\n      data={data}\n      margin={{ top: 40, right: 40, left: 40, bottom: 40 }}\n    >\n      {Object.values(tests).map((value, key) => (\n      <Bar\n        key={key}\n        dataKey={value}\n        fill={colors[key]}\n        radius={[10, 10, 0, 0]}\n      />\n      ))}\n      <CartesianGrid\n        strokeDasharray=\"5\"\n        vertical={false}\n      />\n      <XAxis\n        tickLine={false}\n        axisLine={{ strokeWidth: 2 }}\n        tick={false}\n        domain={[0]}\n      />\n      <YAxis\n        axisLine={false}\n        tickLine={false}\n        domain={range}\n        tickCount={6}\n        label={{\n          value: `${test.toUpperCase()}${P99 === test ? '(ms)' : ''}`,\n          angle: -90,\n          offset: -20,\n          position: 'insideLeft'\n        }}\n      />\n    </BarChart>\n  </ResponsiveContainer>\n)\n","import React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { styled } from '@mui/material/styles'\n\nimport { capitalize } from '../helpers'\n\nconst DECIMAL_PLACES = 2\n\nconst MainStyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    fontFamily: 'Smoolthan',\n    fontWeight: 'bold',\n    backgroundColor: '#2CA597',\n    color: '#FFFFFF'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  }\n}))\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover\n  },\n}));\n\nexport default ({ rps, p99 }) => (\n  <TableContainer\n    component={Paper}\n    sx={{ borderRadius: '10px' }}\n  >\n    <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n      <TableHead>\n        <TableRow>\n          <MainStyledTableCell align=\"center\"></MainStyledTableCell>\n          <MainStyledTableCell align=\"center\">RPS</MainStyledTableCell>\n          <MainStyledTableCell align=\"center\">P99 (ms)</MainStyledTableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.keys(rps).map(key => (\n        <StyledTableRow key={key} >\n          <TableCell\n            component=\"th\"\n            scope=\"row\"\n            sx={{\n              fontFamily: \"'Open Sans', sans-serif\",\n              fontWeight: 'bold',\n              color: '#505071',\n            }}\n          >\n            {key.split('-').map( v => capitalize(v)).join(' & ')}\n          </TableCell>\n          <TableCell\n            component=\"th\"\n            scope=\"row\"\n            align=\"center\"\n            sx={{\n              fontFamily: \"'Open Sans', sans-serif\",\n              color: '#505071',\n            }}\n          >\n            {rps[key]?.toFixed(DECIMAL_PLACES)}\n          </TableCell>\n          <TableCell\n            component=\"th\"\n            scope=\"row\"\n            align=\"center\"\n            sx={{\n              fontFamily: \"'Open Sans', sans-serif\",\n              color: '#505071',\n            }}\n          >\n            {p99[key]?.toFixed(DECIMAL_PLACES)}\n          </TableCell>\n        </StyledTableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n)\n","import React, { useState } from 'react'\nimport Container from '@mui/material/Container';\n\nimport Clouds from './Clouds'\nimport Tests from './Tests'\nimport TestsBarChart from './TestsBarChart'\nimport Legend from './Legend'\nimport PluginTable from './PluginTable'\n\nimport {\n  clouds,\n  RPS,\n  P99,\n  KONG,\n  getTests as getPerfTests,\n  machines,\n  getMachineWeight,\n  ranges,\n} from '../helpers'\n\nconst TESTS = [ ...getPerfTests(KONG), ...getPerfTests() ]\n\nconst getTests = cloud => {\n  const tests = []\n\n  Object.values(machines).map(value => tests.push(value[clouds.indexOf(cloud)]))\n\n  return tests\n}\n\nconst getData = (rps, p99, machine) => {\n  const data = {}\n\n  data[RPS] = {}\n  data[P99] = {}\n\n  Object.keys(rps).map(key => {\n    if (TESTS.includes(key)) {\n      data[RPS][key] = rps[key][machine]?.tyk\n      data[P99][key] = p99[key][machine]?.tyk\n    }\n  })\n\n  return data\n}\n\nexport default ({ defaultTest, rps, p99 }) => {\n  const [test, setTest] = useState(defaultTest),\n        [cloud, setCloud] = useState(clouds[0]),\n        cloud_index=clouds.indexOf(cloud),\n        data = getData(rps[cloud], p99[cloud], machines[test][clouds.indexOf(cloud)])\n\n  return (\n    <Container maxWidth=\"lg\">\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontFamily: \"'Open Sans', sans-serif\",\n          marginBottom: '20px',\n        }}\n      >\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          width: '200px',\n        }}>\n          <Clouds\n            cloud={cloud}\n            setCloud={e => setCloud(e.target.value)}\n          />\n          <div style={{ height: '10px' }}/>\n          <Tests\n            test={machines[test][cloud_index]}\n            tests={getTests(cloud)}\n            setTest={e => setTest(getMachineWeight(e.target.value))}\n          />\n        </div>\n        <div>\n          <Legend values={TESTS} />\n          <div style={{ display: \"flex\" }}>\n            <div style={{\n              width: '500px',\n              height: '400px'\n            }}>\n              <TestsBarChart\n                test={RPS}\n                tests={TESTS}\n                data={[ data.rps ]}\n                range={ranges[test][0]}\n              />\n            </div>\n            <div style={{\n              width: '500px',\n              height: '400px'\n            }}>\n              <TestsBarChart\n                test={P99}\n                tests={TESTS}\n                data={[ data.p99 ]}\n                range={ranges[test][1]}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <PluginTable\n        { ...data }\n      />\n    </Container>\n  )\n}\n","import React from 'react'\n\nimport TestsLineChartSet from './components/TestsLineChartSet'\nimport TestsBarChartSet from './components/TestsBarChartSet'\n\nimport {\n  KONG,\n  APOLLO,\n} from './helpers'\n\nimport benchmarks from './benchmarks'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cloud: 'aws',\n      test: 'auth',\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      {this.props.tyk ? <TestsBarChartSet\n        defaultTest={16}\n        { ...benchmarks }\n      /> : null}\n      {this.props.kong ? <TestsLineChartSet\n        testSet={KONG}\n        defaultTest={'auth'}\n        { ...benchmarks }\n      /> : null}\n      {this.props.apollo ? <TestsLineChartSet\n        testSet={APOLLO}\n        defaultTest={'stitch-0'}\n        { ...benchmarks }\n      /> : null}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\n\nimport './fonts/Smoolthan/Smoolthan Bold.otf'\nimport './index.css'\n\nconst analyzer = document.getElementById('analyzer'),\n      className = analyzer.classList.value\n\nReactDOM.createRoot(analyzer).render(\n  <React.StrictMode>\n    <App\n      tyk={className.includes('tyk')}\n      kong={className.includes('kong')}\n      apollo={className.includes('apollo')}\n    />\n  </React.StrictMode>\n)\n"],"sourceRoot":""}