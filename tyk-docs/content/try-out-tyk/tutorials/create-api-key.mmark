---
date: 2017-03-13T15:08:55Z
Title: Create an API Key
markup: mmark
menu:
  main:
    parent: "Tutorials"
weight: 3
---
<span data-filetype="mmark"></span>

Follow the tutorial for your installation.

{{% tabs %}}
{{% tab "Cloud" %}}
{{./static/include/create-api-key-include.md}}

You will see a 200 response with your new key:
```
{
  "api_model": {},
  "key_id": "59bf9159adbab8abcdefghijac9299a1271641b94fbaf9913e0e048c",
  "data": {...}
}
```

The value returned in the `key_id` parameter of the response is the access key you can now use to access the API that was specified in the `access_rights` section of the call.

{{% /tab %}}
{{% tab "Multi-Cloud" %}}

> **NOTE**: Tyk Multi-Cloud has superseded our Hybrid offering. See [Tyk Multi-Cloud](https://tyk.io/api-gateway/cloud/#multi-cloud) for more details. You can get a free 30 day trial of Tyk Multi-Cloud.

Creating an API Key with Tyk Multi-Cloud is the same process as with Tyk Cloud. The only difference is that when you use the API key, you can use it either against your Cloud endpoints or against your Multi-Cloud Gateway. Both are valid.

{{./static/include/create-api-key-include.md}}

{{% /tab %}}
{{% tab "On-Premises" %}}
{{./static/include/create-api-key-include.md}}

You will see a response with your new key:
```
{
  "action": "create",
  "key": "c2cb92a78f944e9a46de793fe28e847e",
  "status": "ok"
}
```

The value returned in the `key` parameter of the response is the access key you can now use to access the API that was specified in the `access_rights` section of the call
{{% /tab %}}
{{% tab "Community Edition" %}}
To create an API Key, we will need the API ID that we wish to grant the key access to, then creating the key is a very simple API call to the endpoint.

**Prerequisite**

*   You will need your API secret, this is the `secret` property of the `tyk.conf` file.

Once you have this value, you can use them to access the Gateway API, the below `curl` command will generate a key for one of your APIs, remember to replace `{API-SECRET}`, `{API-ID}` and `{API-NAME}` with the real values as well as the `curl` domain name and port to be the correct values for your environment.

```{.copyWrapper}
curl -X POST -H "x-tyk-authorization: {API-SECRET}" \
  -s \
  -H "Content-Type: application/json" \
  -X POST \
  -d '{
    "allowance": 1000,
    "rate": 1000,
    "per": 1,
    "expires": -1,
    "quota_max": -1,
    "org_id": "1",
    "quota_renews": 1449051461,
    "quota_remaining": -1,
    "quota_renewal_rate": 60,
    "access_rights": {
      "{API-ID}": {
        "api_id": "{API-ID}",
        "api_name": "{API-NAME}",
        "versions": ["Default"]
      }
    },
    "meta_data": {}
  }' http://localhost:8080/tyk/keys/create | python -mjson.tool
```

You will see a response with your new key:

```
{
  "action": "create",
  "key": "c2cb92a78f944e9a46de793fe28e847e",
  "status": "ok"
}
```

The value returned in the `key` parameter of the response is the access key you can now use to access the API that was specified in the `access_rights` section of the call.
{{% /tab %}}
{{% /tabs %}}
